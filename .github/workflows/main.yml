name: CI Tests

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15]
        compiler: [gfortran-8, gfortran-9]
    env:
      FC: ${{ matrix.compiler }}
      LANGUAGE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LC_TYPE: en_US.UTF-8 
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none

    name: ${{ matrix.os }} / ${{ matrix.compiler }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Cache MPI
        id: cache-mpi
        uses: actions/cache@v2
        with:
          path: ~/local/openmpi
          key: mpi-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}
      - name: Build MPI
        if: steps.cache-mpi.outputs.cache-hit != 'true'
        run: |
          sh ${GITHUB_WORKSPACE}/tools/travis-install-mpi.sh openmpi 4.0.4
      - name: Echo environment 1
        run: |
          echo "PATH: ${PATH}"
          echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
          echo "DYLD_LIBRARY_PATH: ${DYLD_LIBRARY_PATH}"
      - name: Set MPI Environment
        run: |
          echo "::add-path::${HOME}/local/openmpi/bin"
          echo "::set-env name=LD_LIBRARY_PATH::${HOME}/local/openmpi/lib"
          echo "::set-env name=DYLD_LIBRARY_PATH::${HOME}/local/openmpi/lib"
      - name: Echo environment 2
        run: |
          echo "PATH: ${PATH}"
          echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
          echo "DYLD_LIBRARY_PATH: ${DYLD_LIBRARY_PATH}"
      - name: Versions
        run: |
          ${FC} --version
          mpirun --version
          mpifort --show
      - name: Build pFUnit
        run: | 
          mkdir -p build
          cd build
          cmake .. -DCMAKE_Fortran_COMPILER=${FC}
      - name: Run Tests
        run: |
          cd build
          make -j 
          make -j tests
          ctest -j --output-on-failure


