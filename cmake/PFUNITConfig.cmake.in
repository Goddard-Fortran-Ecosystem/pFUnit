# Config file for the pFUnit package
# It defines the following variables
#    PFUNIT_INCLUDE_DIRS - Include directories for pFUnit
#    PFUNIT_LIBRARIES    - libraries to link against
#    PFUNIT_PARSER       - Command for executing the pFUnit parsers for parsing .pf-files
#    PFUNIT_DRIVER       - The pFUnit driver needed for running tests
#    add_pfunit_test     - Helper function for defining test suites with .pf-files

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

# Enables the use of the build directory directly, without having to
# specify the paths for the external packages as well
if (EXISTS "@CMAKE_BINARY_DIR@/extern/gFTL")
  list(APPEND CMAKE_PREFIX_PATH "@CMAKE_BINARY_DIR@/extern/gFTL")
elseif (EXISTS "@GFTL_ROOT@")
  set(GFTL_ROOT "@GFTL_ROOT@")
elseif (EXISTS "@GFTL_DIR@")
  set(GFTL_ROOT "@GFTL_DIR@")
elseif (EXISTS "@GFTL_TOP_DIR@")
  set(GFTL_ROOT "@GFTL_TOP_DIR@")
endif()

if (EXISTS "@CMAKE_BINARY_DIR@/extern/gFTL-shared")
  list(APPEND CMAKE_PREFIX_PATH "@CMAKE_BINARY_DIR@/extern/gFTL-shared")
elseif (EXISTS "@GFTL_SHARED_ROOT@")
  set(GFTL_SHARED_ROOT "@GFTL_SHARED_ROOT@")
elseif (EXISTS "@GFTL_SHARED_DIR@")
  set(GFTL_SHARED_ROOT "@GFTL_SHARED_DIR@")
elseif (EXISTS "@GFTL_SHARED_TOP_DIR@")
  set(GFTL_SHARED_ROOT "@GFTL_SHARED_TOP_DIR@")
endif()

if (EXISTS "@CMAKE_BINARY_DIR@/extern/fArgParse")
  list(APPEND CMAKE_PREFIX_PATH "@CMAKE_BINARY_DIR@/extern/fArgParse")
elseif (EXISTS "@FARGPARSE_ROOT@")
  set(FARGPARSE_ROOT "@FARGPARSE_ROOT@")
elseif (EXISTS "@FARGPARSE_DIR@")
  set(FARGPARSE_ROOT "@FARGPARSE_DIR@")
elseif (EXISTS "@FARGPARSE_TOP_DIR@")
  set(FARGPARSE_ROOT "@FARGPARSE_TOP_DIR@")
endif()

find_dependency (Python)
find_dependency (OpenMP)
find_dependency(GFTL)
find_dependency(GFTL_SHARED)
find_dependency(FARGPARSE)

set (prefix ${CMAKE_CURRENT_LIST_DIR}/../..)
set (PFUNIT_TOP_DIR ${prefix}/PFUNIT-@PFUNIT_VERSION_MAJOR@.@PFUNIT_VERSION_MINOR@ CACHE PATH "")

set (PFUNIT_VERSION "@PROJECT_VERSION@")
set (PFUNIT_INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR}/../include)
set (PFUNIT_BUILD_SHARED "@BUILD_SHARED@")
set (PFUNIT_SKIP_MPI "@SKIP_MPI@")
set (PFUNIT_MPI_USE_MPIEXEC "@MPI_USE_MPIEXEC@")
#set (PFUNIT_LINK_DIRS ${CMAKE_CURRENT_LIST_DIR}/lib)
if (PFUNIT_BUILD_SHARED AND BUILD_SHARED_LIBS)
  set (PFUNIT_LIBRARIES PFUNIT::funit_shared)
  if (NOT PFUNIT_SKIP_MPI)
    list(APPEND PFUNIT_LIBRARIES PFUNIT::pfunit_shared)
  endif()
else()
  set (PFUNIT_LIBRARIES PFUNIT::funit)
  if (NOT PFUNIT_SKIP_MPI)
    list(APPEND PFUNIT_LIBRARIES PFUNIT::pfunit)
  endif()
endif()
set (PFUNIT_PARSER "${Python_EXECUTABLE}" "${CMAKE_CURRENT_LIST_DIR}/../bin/funitproc")
set (PFUNIT_DRIVER "${CMAKE_CURRENT_LIST_DIR}/../include/driver.F90")
set (PFUNIT_TESTUTILS "${CMAKE_CURRENT_LIST_DIR}/../include/TestUtil.F90")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/../include")
include (add_pfunit_ctest)
include (add_pfunit_test)

include("${CMAKE_CURRENT_LIST_DIR}/PFUNITTargets.cmake")
